// Project Euler Problem 029
//
// How many distinct terms are in the sequence generated by a^b for
// 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

package problems

import (
	"fmt"

	"github.com/zellyn/project-euler/go/primes"
)

type PrimesLt100 [25]int

var indexes map[int]int

func initIndexes() {
	indexes = make(map[int]int)
	for n := 0; n < 25; n++ {
		indexes[primes.Get(n)] = n
	}
}

func factors(n int) (result PrimesLt100) {
	for _, factor := range primes.PrimeFactors(n) {
		result[indexes[factor.Prime]] = factor.Count
	}
	return
}

func (p *PrimesLt100) Power(n int) {
	for i := 0; i < 25; i++ {
		p[i] *= n
	}
}

func Problem029() string {
	initIndexes()
	seen := make(map[PrimesLt100]bool)
	for a := 2; a <= 100; a++ {
		aFactors := factors(a)
		for b := 2; b <= 100; b++ {
			copy := aFactors
			copy.Power(b)
			seen[copy] = true
		}
	}
	return fmt.Sprintf("%d", len(seen))
}

func init() {
	Functions[29] = Problem029
}
